import os
import numpy as np
import tensorflow as tf
from WebShellDetect.settings import BASE_DIR
from neural.cnn import CNN
from neural.feature import make_feature_tfidf, load_idf
from neural.mlp import MLP
from shelldata import load_opcode_dict

opdict = load_opcode_dict()
idf = load_idf()
test_feature_array = []
test_label_array = []
test_samples = 0
length = 0
with open(os.path.join(BASE_DIR, "php.white.train.txt"), "r", encoding="utf-8") as f:
  for line in f:
    test_samples += 1
    feature_i = make_feature_tfidf(opdict, line.strip(), idf)
    test_label_array.append([1.0, 0.0])
    test_feature_array.append(feature_i)
    length += len(line.split())
with open(os.path.join(BASE_DIR, "php.black.train.txt"), "r", encoding="utf-8") as f:
  for line in f:
    test_samples += 1
    feature_i = make_feature_tfidf(opdict, line.strip(), idf)
    test_label_array.append([0.0, 1.0])
    test_feature_array.append(feature_i)
    length += len(line.split())
test_np_features = np.array(test_feature_array)
test_np_labels = np.array(test_label_array)
avg_length = length / test_samples
print("Average: {}".format(avg_length))

g1 = tf.Graph()
with tf.Session(graph=g1) as mlp_sess:
  mlp = MLP(sess=mlp_sess, dim=len(opdict))
  mlp.init_all()
  mlp.restore()
  # 单样本的测试
  opcodes = """INIT_FCALL SEND_VAL DO_ICALL INIT_FCALL DO_ICALL INIT_FCALL SEND_VAL INIT_FCALL DO_ICALL SEND_VAR DO_ICALL ASSIGN FETCH_DIM_R FETCH_DIM_R ADD ASSIGN ASSIGN_DIM OP_DATA ASSIGN_DIM OP_DATA INIT_FCALL SEND_VAL DO_ICALL ASSIGN IS_NOT_EQUAL JMPZ BEGIN_SILENCE INIT_FCALL FETCH_W SEND_REF SEND_VAL DO_ICALL END_SILENCE BEGIN_SILENCE INIT_FCALL FETCH_W SEND_REF SEND_VAL DO_ICALL END_SILENCE FETCH_R FETCH_DIM_R ASSIGN FETCH_DIM_R IS_EQUAL JMPZ FETCH_R FETCH_DIM_R IS_EQUAL JMPZ INIT_FCALL SEND_VAL SEND_VAL DO_ICALL CONCAT CONCAT ECHO CONCAT CONCAT ECHO EXIT JMPZ INIT_FCALL FETCH_R FETCH_DIM_R SEND_VAL DO_ICALL ASSIGN FETCH_DIM_R IS_EQUAL JMPZ INIT_FCALL SEND_VAL FETCH_DIM_R SEND_VAL INIT_FCALL DO_ICALL ADD SEND_VAL DO_ICALL CONCAT CONCAT ECHO CONCAT CONCAT ECHO EXIT FETCH_IS ISSET_ISEMPTY_DIM_OBJ JMPZ FETCH_R FETCH_DIM_R FETCH_DIM_R IS_NOT_EQUAL JMPZ INIT_FCALL DO_FCALL JMP INIT_FCALL DO_FCALL INIT_FCALL DO_ICALL JMPZ INIT_FCALL FETCH_W SEND_REF DO_FCALL FETCH_W ASSIGN INIT_FCALL FETCH_W SEND_REF DO_FCALL FETCH_W ASSIGN FETCH_R FETCH_DIM_R IS_EQUAL JMPZ INIT_FCALL SEND_VAL DO_ICALL ASSIGN INIT_FCALL_BY_NAME SEND_VAL_EX SEND_VAR_EX DO_FCALL JMPNZ INIT_FCALL DO_ICALL QM_ASSIGN JMP QM_ASSIGN ASSIGN ECHO EXIT JMPNZ BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE JMPNZ ECHO JMP INIT_FCALL SEND_VAR DO_ICALL ASSIGN INIT_FCALL SEND_VAL SEND_VAR DO_ICALL ASSIGN COUNT SUB FETCH_DIM_R ASSIGN INIT_FCALL CONCAT SEND_VAL DO_ICALL INIT_FCALL CONCAT SEND_VAL DO_ICALL INIT_FCALL SEND_VAL DO_ICALL INIT_FCALL INIT_FCALL SEND_VAR DO_ICALL CONCAT SEND_VAL DO_ICALL BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE EXIT INIT_FCALL SEND_VAL SEND_VAL SEND_VAL DO_ICALL ASSIGN JMPZ JMPZ ASSIGN INIT_FCALL SEND_VAR SEND_VAR DO_FCALL ASSIGN JMP FETCH_R FETCH_DIM_R ASSIGN INIT_FCALL SEND_VAR SEND_VAR DO_FCALL ASSIGN INIT_FCALL SEND_VAR DO_FCALL JMPZ ASSIGN JMP ASSIGN INIT_FCALL SEND_VAL DO_ICALL ASSIGN INIT_FCALL_BY_NAME SEND_VAL_EX SEND_VAR_EX DO_FCALL JMPNZ QM_ASSIGN JMP QM_ASSIGN ASSIGN INIT_FCALL SEND_VAL DO_ICALL JMPNZ QM_ASSIGN JMP QM_ASSIGN ASSIGN ECHO FETCH_R FETCH_DIM_R ECHO ECHO FETCH_R FETCH_DIM_R ECHO ECHO ECHO ECHO ECHO ECHO ECHO ECHO ECHO INIT_FCALL INIT_FCALL BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE SEND_VAR SEND_VAL SEND_VAL DO_ICALL SEND_VAR SEND_VAL DO_ICALL ECHO ECHO ECHO ECHO INIT_FCALL SEND_VAR DO_ICALL ECHO ECHO ECHO ECHO INIT_FCALL SEND_VAR DO_ICALL ECHO ECHO BEGIN_SILENCE FETCH_R END_SILENCE IS_NOT_EQUAL JMPZ INIT_FCALL SEND_VAR DO_ICALL JMPZ BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE JMPZ CONCAT ECHO JMP ECHO JMP ECHO JMP JMPZ IS_NOT_EQUAL JMPZ ROPE_INIT ROPE_ADD ROPE_END ASSIGN INIT_FCALL CAST SEND_VAL DO_ICALL JMPNZ ECHO JMP INIT_FCALL SEND_VAR DO_FCALL JMP ECHO JMP JMPZ BEGIN_SILENCE INIT_FCALL FETCH_R FETCH_DIM_R FETCH_DIM_R SEND_VAL CONCAT FETCH_R FETCH_DIM_R FETCH_DIM_R CONCAT CAST SEND_VAL DO_ICALL END_SILENCE JMPZ QM_ASSIGN JMP QM_ASSIGN ASSIGN ECHO JMP JMPZ CAST ASSIGN BEGIN_SILENCE INIT_FCALL CAST SEND_VAL SEND_VAL DO_ICALL ASSIGN END_SILENCE BEGIN_SILENCE INIT_FCALL SEND_VAR FETCH_R FETCH_DIM_R SEND_VAL DO_ICALL END_SILENCE JMPZ QM_ASSIGN JMP QM_ASSIGN ASSIGN ECHO BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE JMP JMPZ BEGIN_SILENCE INIT_FCALL_BY_NAME SEND_VAR_EX SEND_VAR_EX SEND_VAR_EX DO_FCALL END_SILENCE JMPZ BEGIN_SILENCE INIT_FCALL_BY_NAME SEND_VAR_EX DO_FCALL END_SILENCE JMPZ ECHO INIT_FCALL_BY_NAME DO_FCALL JMP INIT_FCALL_BY_NAME DO_FCALL ECHO JMP JMPZ BEGIN_SILENCE INIT_FCALL_BY_NAME SEND_VAR_EX SEND_VAR_EX SEND_VAR_EX DO_FCALL END_SILENCE JMPNZ EXIT BEGIN_SILENCE INIT_FCALL_BY_NAME SEND_VAR_EX DO_FCALL END_SILENCE JMPNZ EXIT BEGIN_SILENCE INIT_FCALL_BY_NAME GOTO FETCH_FUNC_ARG FETCH_DIM_FUNC_ARG UNKNOWN DO_FCALL END_SILENCE ASSIGN JMPZ QM_ASSIGN JMP INIT_FCALL_BY_NAME DO_FCALL CONCAT QM_ASSIGN ECHO INIT_FCALL_BY_NAME DO_FCALL JMP JMPZ FETCH_R FETCH_DIM_R CONCAT CONCAT INIT_FCALL FETCH_R FETCH_DIM_R SEND_VAR DO_FCALL CONCAT ECHO JMP ECHO ECHO FETCH_IS ISSET_ISEMPTY_DIM_OBJ JMPZ FETCH_IS ISSET_ISEMPTY_DIM_OBJ JMPNZ FETCH_R FETCH_DIM_R IS_EQUAL JMPZ ECHO BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE ASSIGN JMP ROPE_INIT ROPE_ADD ROPE_END ASSIGN BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE ASSIGN IS_EQUAL JMPZ IS_NOT_EQUAL JMPZ IS_NOT_EQUAL JMPZ BEGIN_SILENCE INIT_FCALL SEND_VAL BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE SEND_VAR DO_ICALL END_SILENCE ASSIGN BEGIN_SILENCE INIT_FCALL SEND_VAL BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE SEND_VAR DO_ICALL END_SILENCE ASSIGN INIT_FCALL INIT_FCALL INIT_FCALL SEND_VAR DO_ICALL SEND_VAR SEND_VAL SEND_VAL DO_ICALL SEND_VAR SEND_VAL DO_ICALL ASSIGN INIT_FCALL DO_FCALL CONCAT CONCAT ECHO INIT_FCALL SEND_VAR DO_ICALL CONCAT CONCAT INIT_FCALL SEND_VAR DO_ICALL CONCAT ROPE_INIT ROPE_ADD ROPE_END CONCAT ECHO ROPE_INIT ROPE_ADD ROPE_END ECHO ROPE_INIT ROPE_ADD ROPE_END ECHO ECHO ROPE_INIT ROPE_ADD ROPE_END ECHO INIT_FCALL SEND_VAR DO_ICALL CONCAT CONCAT INIT_FCALL SEND_VAR DO_ICALL CONCAT CONCAT ECHO ECHO PRE_INC JMP IS_EQUAL JMPZ INIT_FCALL DO_FCALL CONCAT CONCAT ECHO INIT_FCALL SEND_VAR DO_ICALL CONCAT CONCAT INIT_FCALL SEND_VAR DO_ICALL CONCAT CONCAT ECHO ECHO BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE ASSIGN JMPNZ BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE ECHO BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE ASSIGN JMP ROPE_INIT ROPE_ADD ROPE_END ASSIGN BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE ASSIGN IS_EQUAL JMPZ BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE ASSIGN ASSIGN_DIV BEGIN_SILENCE INIT_FCALL SEND_VAR SEND_VAL DO_ICALL END_SILENCE ASSIGN BEGIN_SILENCE INIT_FCALL SEND_VAL BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE SEND_VAR DO_ICALL END_SILENCE ASSIGN BEGIN_SILENCE INIT_FCALL SEND_VAL BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE SEND_VAR DO_ICALL END_SILENCE ASSIGN BEGIN_SILENCE INIT_FCALL INIT_FCALL BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE SEND_VAR SEND_VAL SEND_VAL DO_ICALL SEND_VAR SEND_VAL DO_ICALL ASSIGN END_SILENCE INIT_FCALL DO_FCALL CONCAT CONCAT ECHO ROPE_INIT ROPE_ADD ROPE_ADD ROPE_ADD ROPE_END ECHO ROPE_INIT ROPE_ADD ROPE_END ECHO ROPE_INIT ROPE_ADD ROPE_END ECHO ROPE_INIT ROPE_ADD ROPE_END ECHO ROPE_INIT ROPE_ADD ROPE_END ECHO INIT_FCALL SEND_VAR DO_ICALL CONCAT CONCAT INIT_FCALL SEND_VAR DO_ICALL CONCAT CONCAT INIT_FCALL SEND_VAR DO_ICALL CONCAT CONCAT INIT_FCALL SEND_VAR DO_ICALL CONCAT CONCAT INIT_FCALL SEND_VAR DO_ICALL CONCAT CONCAT ECHO ECHO PRE_INC BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE ASSIGN JMPNZ BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE ECHO INIT_FCALL DO_FCALL ECHO ECHO ECHO ECHO ECHO ECHO JMP FETCH_R FETCH_DIM_R IS_EQUAL JMPZ IS_EQUAL JMPZ ROPE_INIT ROPE_ADD ROPE_END ASSIGN BEGIN_SILENCE INIT_FCALL SEND_VAR SEND_VAL DO_ICALL END_SILENCE ASSIGN BEGIN_SILENCE INIT_FCALL SEND_VAR INIT_FCALL SEND_VAR DO_ICALL SEND_VAR DO_ICALL END_SILENCE ASSIGN BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE INIT_FCALL SEND_VAR DO_ICALL ASSIGN JMP ASSIGN ROPE_INIT ROPE_ADD ROPE_END ASSIGN ECHO INIT_FCALL SEND_VAR DO_ICALL ECHO ECHO INIT_FCALL SEND_VAR DO_ICALL ECHO ECHO ECHO ECHO ECHO ECHO JMP FETCH_R FETCH_DIM_R IS_EQUAL JMPZ INIT_FCALL SEND_VAL DO_ICALL JMPNZ ECHO INIT_FCALL SEND_VAR DO_ICALL ECHO ECHO IS_EQUAL JMPZ ECHO ECHO IS_EQUAL JMPZ ECHO ECHO IS_EQUAL JMPZ ECHO ECHO IS_EQUAL JMPZ ECHO ECHO IS_EQUAL JMPZ ECHO ECHO FETCH_R FETCH_DIM_R ECHO ECHO FETCH_IS ISSET_ISEMPTY_DIM_OBJ JMPNZ IS_EQUAL JMPZ INIT_FCALL FETCH_R FETCH_DIM_R SEND_VAL DO_ICALL JMP IS_EQUAL JMPZ INIT_FCALL FETCH_R FETCH_DIM_R SEND_VAL DO_ICALL JMP IS_EQUAL JMPZ INIT_FCALL FETCH_R FETCH_DIM_R SEND_VAL DO_ICALL ASSIGN ECHO JMP IS_EQUAL JMPZ INIT_FCALL FETCH_R FETCH_DIM_R SEND_VAL DO_ICALL ASSIGN ECHO JMP IS_EQUAL JMPZ INIT_FCALL FETCH_R FETCH_DIM_R SEND_VAL SEND_VAL DO_ICALL ASSIGN INIT_FCALL SEND_VAR SEND_VAL DO_ICALL ASSIGN ECHO INIT_FCALL SEND_VAR DO_ICALL JMP INIT_FCALL FETCH_R FETCH_DIM_R SEND_VAL DO_ICALL ECHO JMP ECHO JMP FETCH_R FETCH_DIM_R IS_EQUAL JMPZ ECHO INIT_FCALL SEND_VAR DO_ICALL ECHO ECHO ECHO ECHO JMP FETCH_R FETCH_DIM_R IS_EQUAL JMPZ JMPZ QM_ASSIGN JMP QM_ASSIGN ASSIGN JMPZ QM_ASSIGN JMP QM_ASSIGN ASSIGN JMPZ QM_ASSIGN JMP QM_ASSIGN ASSIGN JMPZ QM_ASSIGN JMP QM_ASSIGN ASSIGN ECHO ECHO ECHO ECHO ECHO ECHO ECHO ECHO ECHO JMP FETCH_R FETCH_DIM_R IS_EQUAL JMPZ ECHO ECHO INIT_FCALL DO_FCALL INIT_FCALL DO_ICALL ECHO RETURN RECV INIT_FCALL SEND_VAR DO_ICALL ASSIGN CASE JMPNZ CASE JMPZNZ FETCH_CONSTANT FREE RETURN FETCH_CONSTANT FREE RETURN FREE RETURN FREE RETURN RECV RECV BIND_GLOBAL INIT_FCALL SEND_VAL SEND_VAR DO_ICALL QM_ASSIGN INIT_FCALL SEND_VAL SEND_VAR DO_ICALL QM_ASSIGN COUNT QM_ASSIGN JMP FETCH_DIM_R IS_EQUAL JMPNZ FETCH_DIM_R IS_EQUAL JMPNZ FETCH_DIM_R IS_EQUAL JMPZ COUNT SUB UNSET_DIM JMP COUNT FETCH_DIM_R ASSIGN_DIM OP_DATA PRE_INC IS_SMALLER JMPNZ INIT_FCALL SEND_VAL SEND_VAR DO_ICALL RETURN BIND_GLOBAL POST_INC MOD IS_EQUAL JMPZ RETURN RETURN RECV INIT_FCALL SEND_VAR DO_ICALL JMPNZ BEGIN_SILENCE INIT_FCALL SEND_VAR SEND_VAL DO_ICALL END_SILENCE INIT_FCALL SEND_VAR DO_ICALL JMPZ BEGIN_SILENCE INIT_FCALL FAST_CONCAT SEND_VAL SEND_VAL DO_ICALL END_SILENCE ASSIGN JMPZ BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE BEGIN_SILENCE INIT_FCALL FAST_CONCAT SEND_VAL DO_ICALL END_SILENCE RETURN QM_ASSIGN RETURN RECV BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE QM_ASSIGN JMP INIT_FCALL ROPE_INIT ROPE_ADD ROPE_END SEND_VAL DO_ICALL JMPZ IS_NOT_EQUAL JMPZ IS_NOT_EQUAL JMPZ BEGIN_SILENCE INIT_FCALL ROPE_INIT ROPE_ADD ROPE_END SEND_VAL SEND_VAL DO_ICALL END_SILENCE INIT_FCALL ROPE_INIT ROPE_ADD ROPE_END SEND_VAL DO_FCALL INIT_FCALL ROPE_INIT ROPE_ADD ROPE_END SEND_VAL DO_ICALL JMPZ BEGIN_SILENCE INIT_FCALL ROPE_INIT ROPE_ADD ROPE_END SEND_VAL SEND_VAL DO_ICALL END_SILENCE BEGIN_SILENCE INIT_FCALL ROPE_INIT ROPE_ADD ROPE_END SEND_VAL DO_ICALL END_SILENCE INIT_METHOD_CALL DO_FCALL ASSIGN JMPNZ INIT_METHOD_CALL DO_FCALL BEGIN_SILENCE INIT_FCALL CAST SEND_VAL SEND_VAL DO_ICALL END_SILENCE BEGIN_SILENCE INIT_FCALL SEND_VAR DO_ICALL END_SILENCE JMPZ QM_ASSIGN JMP QM_ASSIGN ECHO RETURN RECV JMP IS_NOT_EQUAL JMPZ IS_NOT_EQUAL JMPZ INIT_FCALL SEND_VAR DO_ICALL IS_NOT_EQUAL JMPNZ CAST CAST CAST IS_EQUAL JMPZ TYPE_CHECK JMPZ INIT_FCALL SEND_VAR DO_ICALL ASSIGN_DIM OP_DATA TYPE_CHECK JMPZ INIT_FCALL SEND_REF DO_FCALL ASSIGN_DIM OP_DATA INIT_FCALL SEND_REF DO_ICALL FETCH_LIST ASSIGN FETCH_LIST ASSIGN JMPNZ RETURN BIND_GLOBAL INIT_FCALL SEND_VAL INIT_FCALL DO_ICALL SEND_VAR DO_ICALL QM_ASSIGN INIT_FCALL FETCH_DIM_R FETCH_DIM_R ADD SUB SEND_VAL SEND_VAL DO_ICALL QM_ASSIGN ROPE_INIT ROPE_ADD ROPE_END ECHO RETURN ECHO EXIT"""
  test_feature = make_feature_tfidf(opdict, opcodes, idf)
  test_label = [1.0, 0]
  test_value = mlp.test_one_sample(test_feature, test_label)
  print(test_value)

g2 = tf.Graph()
with tf.Session(graph=g2) as cnn_sess:
  max_len = 300
  cnn = CNN(sess=cnn_sess, dim=len(opdict), max_len=max_len)
  cnn.init_all()
  cnn.restore()
  opcodes = """DEFINED JMPNZ EXIT VERIFY_INSTANCEOF RETURN RECV RECV RECV IS_IDENTICAL JMPZ INIT_STATIC_METHOD_CALL SEND_VAR_EX SEND_VAR_EX SEND_VAR_EX DO_FCALL RETURN IS_IDENTICAL JMPZ ASSIGN FETCH_OBJ_R INIT_METHOD_CALL SEND_VAR_EX DO_FCALL CONCAT QM_ASSIGN QM_ASSIGN COUNT JMP FETCH_DIM_R FETCH_DIM_R IS_NOT_IDENTICAL JMPZ FETCH_DIM_R FETCH_DIM_R CONCAT ASSIGN_DIM OP_DATA JMP INIT_METHOD_CALL GOTO FETCH_DIM_FUNC_ARG UNKNOWN DO_FCALL CONCAT FETCH_DIM_W ASSIGN_DIM OP_DATA FETCH_DIM_IS ISSET_ISEMPTY_DIM_OBJ JMPNZ FETCH_OBJ_R INIT_METHOD_CALL SEND_VAR_EX DO_FCALL CONCAT FAST_CONCAT FETCH_OBJ_R INIT_METHOD_CALL GOTO FETCH_DIM_FUNC_ARG FETCH_DIM_FUNC_ARG UNKNOWN DO_FCALL CONCAT FAST_CONCAT FETCH_DIM_R FETCH_DIM_R CONCAT ASSIGN_DIM OP_DATA IS_IDENTICAL JMPZ FETCH_DIM_IS ISSET_ISEMPTY_DIM_OBJ JMPNZ FAST_CONCAT FETCH_OBJ_R INIT_METHOD_CALL GOTO FETCH_DIM_FUNC_ARG FETCH_DIM_FUNC_ARG UNKNOWN DO_FCALL CONCAT FAST_CONCAT FETCH_OBJ_R INIT_METHOD_CALL GOTO FETCH_DIM_FUNC_ARG FETCH_DIM_FUNC_ARG UNKNOWN DO_FCALL CONCAT ASSIGN_DIM OP_DATA FETCH_DIM_R FETCH_DIM_R CONCAT ASSIGN_DIM OP_DATA PRE_INC IS_SMALLER JMPNZ CONCAT FAST_CONCAT ASSIGN_CONCAT COUNT IS_IDENTICAL JMPZ FETCH_DIM_R QM_ASSIGN JMP INIT_FCALL SEND_VAL SEND_VAR DO_ICALL FAST_CONCAT FAST_CONCAT QM_ASSIGN ASSIGN_CONCAT INIT_FCALL SEND_REF SEND_VAR DO_ICALL RETURN RECV RECV RETURN"""
  test_feature = [opdict[x] for x in opcodes.strip().split()]
  feature_length = len(test_feature)
  if (feature_length < max_len):
    padding_feature = test_feature + [0] * (max_len - feature_length)
  else:
    padding_feature = test_feature[:max_len]
  test_label = [1.0, 0]
  test_value = cnn.test_one_sample(padding_feature, test_label)
  print(test_value)



